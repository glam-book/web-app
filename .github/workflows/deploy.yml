name: Build and Deploy React App

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      PUBLIC_URL: ${{ secrets.PUBLIC_URL }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install dependencies
        run: npm install --force

      - name: Build React app
        run: npm run build

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Verify dist exists
        run: ls -la && ls -la dist

      - name: Build Docker image
        run: |
          docker build \
            --build-arg PUBLIC_URL=$PUBLIC_URL \
            -t tl-web-app .

      - name: Save Docker image to tar.gz
        run: docker save react-app | gzip > react-app.tar.gz

      - name: Copy image to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: 'react-app.tar.gz'
          target: '/home/${{ secrets.SSH_USER }}'

      - name: Deploy container on server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker load < ~/react-app.tar.gz
            docker stop react-app || true
            docker rm react-app || true
            docker run -d \
              --name react-app \
              -e PUBLIC_URL=${{ secrets.PUBLIC_URL }} \
              -p 3015:80 \
              react-app
